// <auto-generated />
using System;
using DentistaCadeirasAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DentistaCadeirasAPI.Migrations
{
    [DbContext(typeof(DentistaCadeirasContext))]
    [Migration("20240625162816_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DentistaCadeirasAPI.Models.Alocacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CadeiraId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CadeiraId");

                    b.ToTable("Alocacoes");
                });

            modelBuilder.Entity("DentistaCadeirasAPI.Models.Cadeira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProximaManutencao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UltimaManutencao")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Cadeiras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Cadeira 1",
                            Fabricante = "Fabricante A",
                            Numero = 1,
                            ProximaManutencao = new DateTime(2024, 6, 25, 13, 28, 16, 0, DateTimeKind.Local).AddTicks(7964),
                            UltimaManutencao = new DateTime(2024, 6, 25, 13, 28, 16, 0, DateTimeKind.Local).AddTicks(7952)
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Cadeira 2",
                            Fabricante = "Fabricante A",
                            Numero = 2,
                            ProximaManutencao = new DateTime(2024, 6, 25, 13, 28, 16, 0, DateTimeKind.Local).AddTicks(7966),
                            UltimaManutencao = new DateTime(2024, 6, 25, 13, 28, 16, 0, DateTimeKind.Local).AddTicks(7966)
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Cadeira 3",
                            Fabricante = "Fabricante B",
                            Numero = 3,
                            ProximaManutencao = new DateTime(2024, 6, 25, 13, 28, 16, 0, DateTimeKind.Local).AddTicks(7968),
                            UltimaManutencao = new DateTime(2024, 6, 25, 13, 28, 16, 0, DateTimeKind.Local).AddTicks(7968)
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Cadeira 4",
                            Fabricante = "Fabricante B",
                            Numero = 4,
                            ProximaManutencao = new DateTime(2024, 6, 25, 13, 28, 16, 0, DateTimeKind.Local).AddTicks(7970),
                            UltimaManutencao = new DateTime(2024, 6, 25, 13, 28, 16, 0, DateTimeKind.Local).AddTicks(7969)
                        });
                });

            modelBuilder.Entity("DentistaCadeirasAPI.Models.Alocacao", b =>
                {
                    b.HasOne("DentistaCadeirasAPI.Models.Cadeira", null)
                        .WithMany("Alocacoes")
                        .HasForeignKey("CadeiraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DentistaCadeirasAPI.Models.Cadeira", b =>
                {
                    b.Navigation("Alocacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
